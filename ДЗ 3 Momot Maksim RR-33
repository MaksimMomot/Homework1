class Warrior {
    protected int health = 50;
    protected int attack = 5;
    
    public boolean isAlive() {
        return this.health > 0;
    }

    public int getAttack() {
        return this.attack;
    }

    public void takeDamage(int damage) {
        this.health -= damage;
    }
}

class Knight extends Warrior {
    public Knight() {
        this.attack = 7;
    }
}

class Defender extends Warrior {
    private int defense = 2;

    public Defender() {
        this.health = 60;
        this.attack = 3;
    }

    @Override
    public void takeDamage(int damage) {
        int damageTaken = Math.max(0, damage - this.defense);
        this.health -= damageTaken;
    }
}

public class Battle {
    public static boolean fight(Warrior warrior1, Warrior warrior2) {
        while (warrior1.isAlive() && warrior2.isAlive()) {
            warrior2.takeDamage(warrior1.getAttack());
            if (!warrior2.isAlive()) {
                return true;
            }
            warrior1.takeDamage(warrior2.getAttack());
        }
        return false;
    }

    public static void main(String[] args) {
        Warrior chuck = new Warrior();
        Warrior bruce = new Warrior();
        Knight carl = new Knight();
        Warrior dave = new Warrior();
        Defender bob = new Defender();

        System.out.println(fight(chuck, bruce)); // true
        System.out.println(fight(dave, carl));   // false
        System.out.println(fight(bob, carl));    // false

        System.out.println(chuck.isAlive()); // true
        System.out.println(bruce.isAlive()); // false
        System.out.println(bob.isAlive());   // false
    }
}
